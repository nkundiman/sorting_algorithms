void merge_subarr(int *subarr, int *buff, size_t front, size_t mid, size_t back)

1. The merge_subarr() function takes in the subarray, a buffer array, and the
   start and end indices of the subarray.
2. It then prints out the subarray.
3. It then loops through the subarray and compares the elements.
4. If the element at the front of the subarray is smaller than the element at
   the back of the subarray, it copies the element at the front of the subarray
   into the buffer array.
5. If the element at the front of the subarray is larger than the element at the
   back of the subarray, it copies the element at the back of the subarray into
   the buffer array.
6. It then copies the buffer array back into the subarray.
7. It then prints out the subarray.


[void merge_sort_recursive(int *subarr, int *buff, size_t front, size_t back)
AND
void merge_sort(int *array, size_t size)]

1. The merge_sort_recursive function is the recursive function that will be called by the merge_sort function.
2. The merge_sort_recursive function takes in the array, a buffer array, and the start and end indices of the subarray.
3. If the size of the subarray is greater than 1, then it will call itself twice, once for the left half and once for the right half.
